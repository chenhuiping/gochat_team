<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0Wmo7gNkehCUHCEIQAIQhAD/2Q==
</value>
  </data>
</root>